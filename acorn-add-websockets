#!/bin/bash

RED="$(tput setaf 1)"
GREEN="$(tput setaf 2)"
YELLOW="$(tput setaf 3)"
NC="$(tput sgr0)"
TICK="${GREEN}✓${NC}"
CROSS="${RED}✘${NC}"

# --------------------------------------------- Inputs & situation
port=$1
if [ -z "$port" ]; then port=6001; fi

run_dir=`pwd` # Bald
script_subdir=`dirname $0`
script_dir="$run_dir/$script_subdir"

# Check we are in /var/www/<website>
subdir=`dirname $run_dir`
website=`basename $run_dir`
if [ "$subdir" != /var/www ]; then
  echo "${RED}ERROR${NC}: This script must be run in a website under ${YELLOW}/var/www/${NC}"
	exit 1
fi

if [ ! -f .env ]; then
  echo "${RED}ERROR${NC}: No ${YELLOW}.env${NC} file found in this website at ${YELLOW}$run_dir${NC}. Is this a Laravel website?"
  echo "Maybe run ${YELLOW}acorn-setup-new-winter${NC} or ${YELLOW}acorn-git-clone-website${NC}"
	exit 1
fi

# grep -E "APP_URL=" .env | cut -d '=' -f 2 | tr -d '"' | sed -E 's#.*://##'
app_url=`grep -E "APP_URL=" .env`
hostname=`echo $app_url | cut -d '=' -f 2 | tr -d '"' | sed -E 's#.*://##'`
if [ -z "$hostname" ]; then
  echo "${RED}ERROR${NC}: Unable to ascertain hostname from APP_URL [$app_url] in ${YELLOW}.env${NC}"
  exit 1
fi

# --------------------------------------------- Composer requirements
if [ ! -d vendor/pusher/pusher-php-server ];      then composer    require pusher/pusher-php-server;      fi
if [ ! -d vendor/beyondcode/laravel-websockets ]; then composer -W require beyondcode/laravel-websockets; fi
# Maybe these are not needed
# because they have been copied into our plugin directly
#if [ ! -d node_modules/laravel-echo ];            then npm install --save-dev laravel-echo;            fi
#if [ ! -d node_modules/pusher-js ];               then npm install --save-dev pusher-js;               fi

# --------------------------------------------- Files & Patches
# TODO: Allow acorn-apply-patch-directory to pass in parameters
echo "${GREEN}INFO${NC}: Installing websockets system for ${YELLOW}$website${NC}, hostname: ${YELLOW}$hostname${NC} on port ${YELLOW}$port${NC}"
if [ -f $script_dir/acorn-apply-patch-directory ] && [ -d $script_dir/winter/websockets ]; then
	$script_dir/acorn-apply-patch-directory "$script_dir/winter/websockets"
fi

# ------------------------------------------------ Migrations
# These publications require the app.php provider WebSocketsServiceProvider
# php artisan vendor:publish --provider="BeyondCode\LaravelWebSockets\WebSocketsServiceProvider" --tag="config" # config/websockets.php
# php artisan vendor:publish --provider="BeyondCode\LaravelWebSockets\WebSocketsServiceProvider" --tag="migrations"
php artisan vendor:publish --all

# To generate /storage/framework/packages.php
php artisan package:discover

# TODO: Enter this in Ubuntu services
echo "${GREEN}INFO${NC}: To run the server run ${YELLOW}./artisan websockets:serve${NC}"
